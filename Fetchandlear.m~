clear all;
clearvars;
imds = imageDatastore('images','IncludeSubfolders',true,'LabelSource','foldernames');
[imdsTrain,imdsTest] = splitEachLabel(imds,0.7,'randomized');
net = alexnet;
inputSize = net.Layers(1).InputSize;
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain);
augimdsTest = augmentedImageDatastore(inputSize(1:2),imdsTest);
layer = 'fc7';
featuresTrain = activations(net,augimdsTrain,layer,'OutputAs','rows');
featuresTest = activations(net,augimdsTest,layer,'OutputAs','rows');
knn_train = fitcknn(featuresTrain, imdsTrain.Labels);
knn_test = fitcknn(featuresTest, imdsTest.Labels);
predicted_train_knn = predict(knn, ftr);
performance_train_knn = confmat(training.labels, predicted_train_knn);
predicted_test_knn = predict(knn, fts);
performance_test_knn = confmat(test.labels, predicted_test_knn);

